[tool.poetry]
name = "sprint6"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "3.10.12"
pycryptodomex = "3.20.0"


[tool.poetry.group.dev.dependencies]
ruff = "0.2.0"


[tool.ruff]
line-length = 120
fix = true
preview = true
unsafe-fixes = true


[tool.ruff.lint]
select = [    
    "A",  # prevent using keywords that clobber python builtins
    "B",  # bugbear: security warnings
    "E",  # pycodestyle
    "D",  # pydocstyle
    "F",  # pyflakes
    "ISC",  # implicit string concatenation
    "UP",  # alert you when better syntax is available in your python version
    "RUF",  # the ruff developer's own rules
    "W",  # pycodestyle
    "T",  # flake print
]
ignore = [
    "D100", "D101", "D103", "D206", # empty docstrings.
    "W191", # tab-indentation: tabs are used instead of spaces.
    "COM819", # prohibited-trailing-comma: trailing commas used by black.
    "COM812", # missing-trailing-comma: trailing commas pasted automatically by black.
    "RET504", # unnecessary-assign: assignment before return increases readability.
    "ISC001", # single-line-implicit-string-concatenation: conflicts with {skip-magic-trailing-comma=false}.
]


[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.ruff.lint.isort]
split-on-trailing-comma = false


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = 35


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
